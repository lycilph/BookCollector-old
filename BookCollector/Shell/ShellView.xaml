<controls:MetroWindow x:Class="BookCollector.Shell.ShellView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:cal="http://www.caliburnproject.org"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:shell="clr-namespace:Framework.Core.Shell;assembly=Framework.Core"
                      xmlns:ui="clr-namespace:Framework.UI;assembly=Framework.UI"
                      mc:Ignorable="d" 
                      Title="Book Collector" 
                      Height="800" 
                      Width="1000" 
                      d:DataContext="{d:DesignData ShellViewModel}"
                      Icon="../Images/books_collection.png">
    <controls:MetroWindow.Resources>
        <ui:BooleanToVisibilityConverter x:Key="HiddenVisibilityConverter" TrueState="Visible" FalseState="Hidden"/>
        <ui:BooleanToVisibilityConverter x:Key="CollapsedVisibilityConverter" TrueState="Visible" FalseState="Collapsed"/>
    </controls:MetroWindow.Resources>
    
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <ItemsControl x:Name="LeftShellCommands">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type shell:WindowCommand}">
                        <Button x:Name="Execute"
                                Content="{Binding DisplayName}"
                                IsEnabled="{Binding IsEnabled}"
                                Visibility="{Binding IsVisible, Converter={StaticResource CollapsedVisibilityConverter}}"
                                cal:Bind.Model="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <ItemsControl x:Name="RightShellCommands">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type shell:WindowCommand}">
                        <Button x:Name="Execute"
                                Content="{Binding DisplayName}"
                                IsEnabled="{Binding IsEnabled}"
                                Visibility="{Binding IsVisible, Converter={StaticResource CollapsedVisibilityConverter}}"
                                cal:Bind.Model="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl x:Name="ShellFlyouts" d:DataContext="{d:DesignInstance shell:FlyoutBase}">
            <controls:FlyoutsControl.ItemContainerStyle>
                <Style TargetType="{x:Type controls:Flyout}" BasedOn="{StaticResource {x:Type controls:Flyout}}">
                    <Setter Property="Header" Value="{Binding DisplayName}" />
                    <Setter Property="IsOpen" Value="{Binding IsOpen}" />
                    <Setter Property="IsPinned" Value="{Binding IsPinned}"/>
                    <Setter Property="Position" Value="{Binding Position}" />
                </Style>
            </controls:FlyoutsControl.ItemContainerStyle>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <controls:TransitioningContentControl Grid.Row="0" x:Name="ActiveItem"/>
        
        <StatusBar Grid.Row="1">
            <StatusBarItem DockPanel.Dock="Right">
                <ProgressBar Width="200" IsIndeterminate="True" Visibility="{Binding IsBusy, Converter={StaticResource HiddenVisibilityConverter}}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock x:Name="Text"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</controls:MetroWindow>
