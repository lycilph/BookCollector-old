<metro:MetroWindow x:Class="BookCollector.Shell.ShellView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:cal="http://www.caliburnproject.org"
                   xmlns:avalon="http://schemas.xceed.com/wpf/xaml/avalondock"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:window="clr-namespace:Framework.Window;assembly=Framework"
                   xmlns:docking="clr-namespace:Framework.Docking;assembly=Framework"
                   mc:Ignorable="d" 
                   GlowBrush="{DynamicResource AccentColorBrush}"
                   WindowStartupLocation="CenterScreen"
                   WindowTransitionsEnabled="False"
                   RightWindowCommandsOverlayBehavior="HiddenTitleBar"
                   Height="600"
                   Width="800"
                   MinWidth="600"
                   MinHeight="300">
    <Window.Resources>
        <avalon:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>

    <metro:MetroWindow.LeftWindowCommands>
        <metro:WindowCommands>
            <ItemsControl x:Name="ShellCommands">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding DisplayName}"
                                x:Name="Execute"
                                cal:Bind.Model="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </metro:WindowCommands>
    </metro:MetroWindow.LeftWindowCommands>
    
    <metro:MetroWindow.RightWindowCommands>
        <metro:WindowCommands>
            <ItemsControl x:Name="RightShellCommands">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button x:Name="Execute"
                                Content="{Binding DisplayName}"
                                cal:Bind.Model="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </metro:WindowCommands>
    </metro:MetroWindow.RightWindowCommands>
    
    <metro:MetroWindow.Flyouts>
        <metro:FlyoutsControl x:Name="ShellFlyouts" d:DataContext="{d:DesignInstance window:FlyoutBase}">
            <metro:FlyoutsControl.ItemContainerStyle>
                <Style TargetType="{x:Type metro:Flyout}" BasedOn="{StaticResource {x:Type metro:Flyout}}">
                    <Setter Property="Header" Value="{Binding DisplayName}" />
                    <Setter Property="IsOpen" Value="{Binding IsOpen}" />
                    <Setter Property="IsPinned" Value="{Binding IsPinned}"/>
                    <Setter Property="Position" Value="{Binding Position}" />
                </Style>
            </metro:FlyoutsControl.ItemContainerStyle>
        </metro:FlyoutsControl>
    </metro:MetroWindow.Flyouts>

    <DockPanel>
        <ContentControl DockPanel.Dock="Top" x:Name="Menu"/>

        <avalon:DockingManager AllowMixedOrientation="True"
                               AnchorablesSource="{Binding Tools}"
                               DocumentsSource="{Binding Content}"
                               ActiveContent="{Binding ActiveItem, Mode=TwoWay}"
                               GridSplitterHeight="10"
                               GridSplitterWidth="10">
            <avalon:DockingManager.LayoutUpdateStrategy>
                <docking:LayoutStrategy/>
            </avalon:DockingManager.LayoutUpdateStrategy>

            <avalon:DockingManager.LayoutItemTemplate>
                <DataTemplate>
                    <ContentControl cal:View.Model="{Binding}" IsTabStop="False" />
                </DataTemplate>
            </avalon:DockingManager.LayoutItemTemplate>

            <avalon:DockingManager.LayoutItemContainerStyleSelector>
                <docking:PanesStyleSelector>
                    <docking:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type avalon:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.DisplayName}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                        </Style>
                    </docking:PanesStyleSelector.ToolStyle>
                    <docking:PanesStyleSelector.ContentStyle>
                        <Style TargetType="{x:Type avalon:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.DisplayName}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected}"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                        </Style>
                    </docking:PanesStyleSelector.ContentStyle>
                </docking:PanesStyleSelector>
            </avalon:DockingManager.LayoutItemContainerStyleSelector>

            <avalon:LayoutRoot>
                <avalon:LayoutPanel Orientation="Horizontal">
                    <avalon:LayoutPanel Orientation="Vertical">
                        <avalon:LayoutDocumentPane/>
                    </avalon:LayoutPanel>
                </avalon:LayoutPanel>
            </avalon:LayoutRoot>
        </avalon:DockingManager>
    </DockPanel>
</metro:MetroWindow>
