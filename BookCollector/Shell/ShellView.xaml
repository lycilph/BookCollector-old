<ma:MetroWindow x:Class="BookCollector.Shell.ShellView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:ma="http://metro.mahapps.com/winfx/xaml/controls"
                xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                xmlns:conv="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                xmlns:shell="clr-namespace:BookCollector.Shell"
                mc:Ignorable="d"
                Title="{Binding DisplayName}"
                Height="600"
                Width="800"
                Icon="../Graphics/book_open_page_white.ico"
                GlowBrush="{DynamicResource AccentColorBrush}"
                BorderThickness="0"
                Background="{DynamicResource MaterialDesignPaper}"
                Loaded="OnLoaded"
                Closing="OnClosing"
                IsEnabled="{Binding IsEnabled}"
                SaveWindowPosition="True"
                WindowButtonCommandsOverlayBehavior="Never"
                RightWindowCommandsOverlayBehavior="Never"
                dialog:DialogParticipation.Register="{Binding}"
                d:DataContext="{d:DesignInstance shell:ShellViewModel}">
    <ma:MetroWindow.Resources>
        <conv:BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
    </ma:MetroWindow.Resources>
    
    <ma:MetroWindow.LeftWindowCommands>
        <ma:WindowCommands ItemsSource="{Binding LeftShellCommands}">
            <ma:WindowCommands.ItemTemplate>
                <DataTemplate DataType="{x:Type shell:WindowCommand}">
                    <Button Content="{Binding DisplayName}"
                            IsEnabled="{Binding IsEnabled}"
                            Visibility="{Binding IsVisible, Converter={StaticResource VisibilityConverter}}"
                            Command="{Binding ExecuteCommand}"/>
                </DataTemplate>
            </ma:WindowCommands.ItemTemplate>
        </ma:WindowCommands>
    </ma:MetroWindow.LeftWindowCommands>

    <ma:MetroWindow.RightWindowCommands>
        <ma:WindowCommands ItemsSource="{Binding RightShellCommands}">
            <ma:WindowCommands.ItemTemplate>
                <DataTemplate DataType="{x:Type shell:WindowCommand}">
                    <Button Content="{Binding DisplayName}"
                            IsEnabled="{Binding IsEnabled}"
                            Visibility="{Binding IsVisible, Converter={StaticResource VisibilityConverter}}"
                            Command="{Binding ExecuteCommand}"/>
                </DataTemplate>
            </ma:WindowCommands.ItemTemplate>
        </ma:WindowCommands>
    </ma:MetroWindow.RightWindowCommands>

    <ma:MetroWindow.Flyouts>
        <ma:FlyoutsControl ItemsSource="{Binding ShellFlyouts}" d:DataContext="{d:DesignInstance shell:FlyoutBase}">
            <ma:FlyoutsControl.ItemContainerStyle>
                <Style TargetType="{x:Type ma:Flyout}" BasedOn="{StaticResource {x:Type ma:Flyout}}">
                    <Setter Property="Header" Value="{Binding DisplayName}"/>
                    <Setter Property="IsOpen" Value="{Binding IsOpen}" />
                    <Setter Property="IsPinned" Value="{Binding IsPinned}"/>
                    <Setter Property="Position" Value="{Binding Position}" />
                    <Setter Property="md:FlyoutAssist.HeaderColorMode" Value="Accent" />
                </Style>
            </ma:FlyoutsControl.ItemContainerStyle>
        </ma:FlyoutsControl>
    </ma:MetroWindow.Flyouts>

    <md:TransitioningContent Content="{Binding ShellContent}"/>
</ma:MetroWindow>
